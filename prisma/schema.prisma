generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-musl-openssl-3.0.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Notification {
  id           String     @id
  subscriberId String
  content      String
  createdAt    DateTime   @default(now())
  readAt       DateTime?
  channels     String[]   @default([])
  providers    String[]   @default(["all"])
  susbscriber  Subscriber @relation(fields: [subscriberId], references: [id])
}

model Channel {
  id          String       @id
  name        String
  createdAt   DateTime     @default(now())
  description String
  subscribers Subscriber[] @relation("ChannelToSubscriber")
}

model Subscriber {
  id                   String                @id
  telegramId           String?               @unique
  createdAt            DateTime              @default(now())
  recipientId          String                @unique
  email                String?               @unique
  mobileSubscriptions  MobileSubscription[]
  notifications        Notification[]
  webPushSubscriptions WebPushSubscription[]
  channels             Channel[]             @relation("ChannelToSubscriber")
  authCode             String? @map("auth_code")
}

model WebPushSubscription {
  id           String     @id
  p256dh       String
  auth         String
  createdAt    DateTime
  updatedAt    DateTime   @updatedAt
  subscriberId String
  endpoint     String
  subscriber   Subscriber @relation(fields: [subscriberId], references: [id])
}

model MobileSubscription {
  id                String     @id
  subscriberId      String
  subscriptionToken String     @unique
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  subscriber        Subscriber @relation(fields: [subscriberId], references: [id])
}
